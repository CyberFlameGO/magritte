#
# Copyright 2020-2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package: "magritte"
type: "FacePixelizationSubgraphCpu"

# A subgraph that pixelizes faces.
#
# This subgraph utilizes the mask pixelization: a mask is created based on the
# face detections, which is then used to blend the input with a pixelized
# version of the whole image.
#
# Inputs:
# - IMAGE: An ImageFrame stream containing the image to be pixelized.
# - DETECTIONS: A list of face detections as std::vector<mediapipe::Detection>.
#
# Outputs:
# - IMAGE: An ImageFrame stream containing the pixelized image.

input_stream: "IMAGE:input_video"
input_stream: "DETECTIONS:detections"
output_stream: "IMAGE:output_video"

node {
  calculator: "FaceDetectionToMaskSubgraphCpu"
  input_stream: "IMAGE:input_video"
  input_stream: "DETECTIONS:detections"
  output_stream: "MASK:blur_mask"
}

node {
  calculator: "MaskPixelizationSubgraphCpu"
  input_stream: "IMAGE:input_video"
  input_stream: "MASK:blur_mask"
  output_stream: "IMAGE:output_video"
}
