#
# Copyright 2021-2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package: "magritte"
type: "FaceDetectionRotatedFullRangeSubgraphGpu"

# A full-range face detection subgraph, with an extra input stream for the
# camera's orientation.
#
# This subgraph utilizes a face detection method that only supports orientations
# of up to +/- 45Â°. However, it uses the ROTATION_DEGREES input stream to
# identify the camera's orientation. Thus the input image is rotated by that
# amount, the detection method is applied in the rotated image, and the
# resulting detections are rotated back.
#
# This subgraph only supports full-range detection, e.g. from a phone's back
# camera.
#
# Inputs:
# - IMAGE: The GpuBuffer stream containing the image on which faces will be
#   detected.
# - ROTATION_DEGREES: An int stream representing the camera's orientation in
#   degrees, counter-clockwise. Only 0, 90, 180, 270 are considered valid
#   inputs.
#
# Outputs:
# - DETECTIONS: A list of face detections as std::vector<mediapipe::Detection>.

input_stream: "IMAGE:input_video"
input_stream: "ROTATION_DEGREES:rotation"
output_stream: "DETECTIONS:output_detections"

# Extracts image size from the input images.
node {
  calculator: "ImagePropertiesCalculator"
  input_stream: "IMAGE_GPU:input_video"
  output_stream: "SIZE:image_size"
}

node: {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE_GPU:input_video"
  input_stream: "ROTATION_DEGREES:rotation"
  output_stream: "IMAGE_GPU:input_video_rotated"
}

node {
  calculator: "FaceDetectionFullRangeSubgraphGpu"
  input_stream: "IMAGE:input_video_rotated"
  output_stream: "DETECTIONS:detections_rotated"
}

node {
  calculator: "DetectionTransformationCalculator"
  input_stream: "DETECTIONS:detections_rotated"
  input_stream: "SIZE:image_size"
  input_stream: "ROTATION_DEGREES:rotation"
  output_stream: "DETECTIONS:output_detections"
  node_options: {
    [type.googleapis.com/magritte.RotationCalculatorOptions] {
      clockwise: true
    }
  }
}
