#
# Copyright 2020-2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package: "magritte"
type: "FaceDetectionShortAndFullRangeSubgraphCpu"

# A face detection subraph that supports both short and full ranges.
#
# This subgraph only supports orientations of up to +/- 45Â°.
#
# This subgraph applies separate short and full-range detections, and then
# applies a non-max suppression to remove duplicate detections.
#
# Inputs:
# - IMAGE: The ImageFrame stream containing the image on which faces will be
#   detected.
#
# Outputs:
# - DETECTIONS: A list of face detections as std::vector<mediapipe::Detection>.

input_stream: "IMAGE:input_video"
output_stream: "DETECTIONS:output_detections"

node {
  calculator: "FaceDetectionShortRangeSubgraphCpu"
  input_stream: "IMAGE:input_video"
  output_stream: "DETECTIONS:output_detections_front"
}

node {
  calculator: "FaceDetectionFullRangeSubgraphCpu"
  input_stream: "IMAGE:input_video"
  output_stream: "DETECTIONS:output_detections_back"
}

# Performs non-max suppression to remove duplicate detections.
node {
  calculator: "NonMaxSuppressionCalculator"
  input_stream: "output_detections_front"
  input_stream: "output_detections_back"
  output_stream: "output_detections"
  node_options: {
    [type.googleapis.com/mediapipe.NonMaxSuppressionCalculatorOptions] {
      num_detection_streams: 2
      min_suppression_threshold: 0.3
      overlap_type: INTERSECTION_OVER_UNION
      algorithm: WEIGHTED
      return_empty_detections: true
    }
  }
}
